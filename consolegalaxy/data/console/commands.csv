command,class,tags,syntax,help
Explore,consolegalaxy.console.Explore,"consolegalaxy,src.consolegalaxy.campaign",Explore [all] [exclude/include] [hazard] [gate] [stableloc] [jumppoint] [planets] [conditions],"Searches all star systems for specified conditions: \n    `all` - search even planets you haven't surveyed (default doesn’t search, sets survey level to full); \n    `exclude/include` - write `exclude` to ignore systems in the Core wolrd and claimed systems (default: exclude); \n    `planets` - MINIMUM nr. of planets that the system needs to have (default planets=1); \n    `gate` - write `gate` to filter by systems that have a gate; \n    `stableloc` - write stableloc=NUMBER to filter by stable locations (default 0); \n    `jumppoint` - same as stableloc (default 0); \n    `hazard` - write `hazard=250` to filter by systems which planets are below or equal to the specified value (doesn’t filter by default); \n    `[conditions]` - a comma-separated, no-space list of planetary conditions that must be met (supports * as wildcard at the start and end), e.g.: [habitable=2, rare_ore*=1, *_ultrarich=1] at least TWO habitable planets and ONE with transplutonic ore and ONE ore/transpluton that is ultrarich."
SystemInRange,consolegalaxy.console.SystemInRange,"consolegalaxy,src.consolegalaxy.campaign",SystemInRange <entity>[entity] [LY] [planets=],"Finds systems in specified range (integer) of an entity (coronal_tap, derelict_cryosleeper, inactive_gate): \n    if two entities are listed `coronal_tap,cryosleeper`, a table will be shown at the end listing systems within range of both; \n    LY - distance in  light years (default is 10); \n    planets - filters by number of planets"